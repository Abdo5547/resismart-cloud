# kubernetes.yaml
- name: Setup Kubernetes Cluster on Master Node
  hosts: all
  become: yes
  gather_facts: yes
  tasks:
    - name: Ensure required directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /etc/kubernetes/
        - "{{ ansible_user_dir }}/.kube/"

    - name: Download and install Kubernetes archive keyring
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
        mode: '0644'

    - name: Add Kubernetes repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release }} main"
        state: present
        filename: kubernetes

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages to avoid automatic upgrades
      shell: echo "{{ item }} hold" | dpkg --set-selections
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Initialize Kubernetes Master
      shell: kubeadm init --pod-network-cidr=192.168.1.0/16
      args:
        creates: /etc/kubernetes/admin.conf
      when: "'master' in group_names"

    - name: Configure kubeconfig for root user
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_user_dir }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
      when: "'master' in group_names"

    - name: Install Calico Network Plugin
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      args:
        executable: /bin/bash
      when: "'master' in group_names"

    - name: Generate join command for worker nodes
      shell: kubeadm token create --print-join-command
      register: join_command
      when: "'master' in group_names"

    - name: Save join command as a fact
      set_fact:
        kubernetes_join_command: "{{ join_command.stdout }}"
      when: "'master' in group_names"

- name: Setup Kubernetes Worker Nodes
  hosts: workers
  become: yes
  gather_facts: yes
  tasks:
    - name: Join Kubernetes cluster
      shell: "{{ hostvars[groups['master'][0]]['kubernetes_join_command'] }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
